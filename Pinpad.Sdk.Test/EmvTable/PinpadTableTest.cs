using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Moq;
using MicroPos.CrossPlatform;
using Pinpad.Sdk.Commands;

namespace Pinpad.Sdk.Test.EmvTable
{
    [TestClass]
    public class PinpadTableTest
    {
		MockedPinpadFacade MockedFacade;
		PinpadConnectionMock MockedConnection;

        #region setting stuff up
        [TestInitialize]
        public void Setup()
        {
			this.MockedFacade = new MockedPinpadFacade();
			this.MockedConnection = new PinpadConnectionMock();
        }

        public CapkTable GetCapk(int i)
        {
			CapkTable capk = new CapkTable();
			switch (i)
			{
				case 4:
					capk.T2_RID.Value = new HexadecimalData("A000000004");
					capk.T2_CAPKIDX.Value = new HexadecimalData("04");
					capk.T2_EXP.Value = new HexadecimalData("030000");
					capk.T2_MOD.Value = new HexadecimalData
					return capk;
				case 5:
					capk.T2_RID.Value = new HexadecimalData("A000000004");
					capk.T2_CAPKIDX.Value = new HexadecimalData("05");
					capk.T2_EXP.Value = new HexadecimalData("030000");
					capk.T2_MOD.Value = new HexadecimalData
					return capk;
				case 6:
					capk.T2_RID.Value = new HexadecimalData("A000000004");
					capk.T2_CAPKIDX.Value = new HexadecimalData("06");
					capk.T2_EXP.Value = new HexadecimalData("030000");
					capk.T2_MOD.Value = new HexadecimalData("CB26FC830B43785B2BCE37C81ED334622F9622F4C89AAE641046B2353433883F307FB7C974162DA72F7A4EC75D9D657336865B8D3023D3D645667625C9A07A6B7A137CF0C64198AE38FC238006FB2603F41F4F3BB9DA1347270F2F5D8C606E420958C5F7D50A71DE30142F70DE468889B5E3A08695B938A50FC980393A9CBCE44AD2D64F630BB33AD3F5F5FD495D31F37818C1D94071342E07F1BEC2194F6035BA5DED3936500EB82DFDA6E8AFB655B1EF3D0D7EBF86B66DD9F29F6B1D324FE8B26CE38AB2013DD13F611E7A594D675C4432350EA244CC34F3873CBA06592987A1D7E852ADC22EF5A2EE28132031E48F74037E3B34AB747F");
					return capk;
				case 7:
					capk.T2_RID.Value = new HexadecimalData("A000000003");
					capk.T2_CAPKIDX.Value = new HexadecimalData("07");
					capk.T2_EXP.Value = new HexadecimalData("030000");
					capk.T2_MOD.Value = new HexadecimalData
					return capk;
				case 8:
					capk.T2_RID.Value = new HexadecimalData("A000000003");
					capk.T2_CAPKIDX.Value = new HexadecimalData("08");
					capk.T2_EXP.Value = new HexadecimalData("030000");
					capk.T2_MOD.Value = new HexadecimalData
					return capk;
				case 9:
					capk.T2_RID.Value = new HexadecimalData("A000000003");
					capk.T2_CAPKIDX.Value = new HexadecimalData("09");
					capk.T2_EXP.Value = new HexadecimalData("030000");
					capk.T2_MOD.Value = new HexadecimalData("9D912248DE0A4E39C1A7DDE3F6D2588992C1A4095AFBD1824D1BA74847F2BC4926D2EFD904B4B54954CD189A54C5D1179654F8F9B0D2AB5F0357EB642FEDA95D3912C6576945FAB897E7062CAA44A4AA06B8FE6E3DBA18AF6AE3738E30429EE9BE03427C9D64F695FA8CAB4BFE376853EA34AD1D76BFCAD15908C077FFE6DC5521ECEF5D278A96E26F57359FFAEDA19434B937F1AD999DC5C41EB11935B44C18100E857F431A4A5A6BB65114F174C2D7B59FDF237D6BB1DD0916E644D709DED56481477C75D95CDD68254615F7740EC07F330AC5D67BCD75BF23D28A140826C026DBDE971A37CD3EF9B8DF644AC385010501EFC6509D7A41");
					return capk;
			}

			return null;
        }


        #endregion

        [TestMethod]
        [ExpectedException(typeof(ArgumentNullException))]
        public void PinpadTablpeoe_should_throw_exception_if_null_PinpadCommunication()
        {
			PinpadTable table = new PinpadTable(this.MockedFacade.Communication as PinpadCommunication);
        }
        [TestMethod]
        public void PinpadTable_should_not_return_null()
        {
            IPinpadConnection conn = Mock.Of<IPinpadConnection>();
            this.MockedFacade.Communication = new PinpadCommunication(conn);
            PinpadTable table = new PinpadTable(this.MockedFacade.Communication);
            Assert.IsNotNull(table);
        }
        [TestMethod]
        [ExpectedException(typeof(NotImplementedException))]
        public void PinpadTable_AddEntry_should_throw_exception_if_unknown_entry()
        {
            PinpadTable table = new PinpadTable(new PinpadCommunicationMock());
            table.AddEntry(new MockedBaseTableEntry());
        }
        [TestMethod]
        public void PinpadTable_loading_tables_should_succeed()
        {
            PinpadTable table = new PinpadTable(new PinpadCommunicationMock());

            Assert.AreEqual(table.CapkTable.Count, 0);

            for (int i = 0; i < 10; i++) { table.AddEntry(this.GetCapk(4)); }

            Assert.AreEqual(table.CapkTable.Count, 1);
        }
    }
}
