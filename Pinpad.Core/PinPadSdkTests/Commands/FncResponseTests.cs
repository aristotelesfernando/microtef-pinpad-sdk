using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using PinPadSDK.Commands;
using PinPadSDK.Enums;

namespace PinPadSdkTests.Commands {
    [TestClass]
    public class FncResponseTests {
        [TestMethod]
        public void ValidateFncResponseWarnings() {
            FncResponse response = new FncResponse();

            Assert.IsFalse(response.IsBlockingCommand, "FncResponse is marked as a blocking command.");

            BasePropertyTestUtils.TestBaseResponse(response);
            BasePropertyTestUtils.TestProperty<OnlineTransactionStatus>(response, response.FNC_DECISION, 1);

            Assert.AreEqual("FNC000009000000000",
                response.CommandString);
            BasePropertyTestUtils.TestCommandString(response);

            BasePropertyTestUtils.TestProperty(response, response.FNC_EMVDAT, 512, true);
            Assert.AreEqual("FNC00052102561234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901200000",
                response.CommandString);
            BasePropertyTestUtils.TestCommandString(response);

            BasePropertyTestUtils.TestProperty(response, response.FNC_ISR, 100, true);
            Assert.AreEqual("FNC000621025612345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012501234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890000",
                response.CommandString);
            BasePropertyTestUtils.TestCommandString(response);

            BasePropertyTestUtils.TestBaseResponse(response);
        }
    }
}
