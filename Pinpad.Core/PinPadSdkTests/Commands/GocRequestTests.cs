using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using PinPadSDK.Commands;

namespace PinPadSdkTests.Commands {
    [TestClass]
    public class GocRequestTests {
        [TestMethod]
        public void ValidateGocRequestWarnings() {
            GocRequest request = new GocRequest();

            BasePropertyTestUtils.TestProperty(request, request.GOC_AMOUNT, 12);
            BasePropertyTestUtils.TestProperty(request, request.GOC_CASHBACK, 12);
            BasePropertyTestUtils.TestProperty(request, request.GOC_EXCLIST);
            BasePropertyTestUtils.TestProperty(request, request.GOC_CONNECT);
            BasePropertyTestUtils.TestProperty(request, request.GOC_METHOD);
            BasePropertyTestUtils.TestProperty(request, request.GOC_KEYIDX, 2);
            BasePropertyTestUtils.TestProperty(request, request.GOC_WKENC, 32);
            BasePropertyTestUtils.TestProperty(request, request.GOC_RISKMAN);
            BasePropertyTestUtils.TestProperty(request, request.GOC_FLRLIMIT, 8);
            BasePropertyTestUtils.TestProperty(request, request.GOC_TPBRS, 2);
            BasePropertyTestUtils.TestProperty(request, request.GOC_TVBRS, 8);
            BasePropertyTestUtils.TestProperty(request, request.GOC_MTPBRS, 2);
            BasePropertyTestUtils.TestProperty(request, request.GOC_TAGS1, 256);
            BasePropertyTestUtils.TestProperty(request, request.GOC_TAGS2, 256);

            Assert.AreEqual("GOC0861234567890121234567890121103121234567890123456789012345678901211234567812123456781200025912812345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234562591281234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456", 
                request.CommandString);
            BasePropertyTestUtils.TestCommandString(request);

            BasePropertyTestUtils.TestProperty(request, request.GOC_RUF1, 1, true);
            Assert.AreEqual("GOC0861234567890121234567890121113121234567890123456789012345678901211234567812123456781200025912812345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234562591281234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456",
                request.CommandString);
            BasePropertyTestUtils.TestCommandString(request);

            BasePropertyTestUtils.TestProperty(request, request.GOC_ACQPR, 32, true);

            Assert.AreEqual("GOC118123456789012123456789012111312123456789012345678901234567890121123456781212345678120321234567890123456789012345678901225912812345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234562591281234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456", 
                request.CommandString);
            BasePropertyTestUtils.TestCommandString(request);
        }
    }
}
